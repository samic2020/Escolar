<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Configuracoes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>